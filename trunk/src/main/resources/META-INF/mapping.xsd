<?xml version="1.0" encoding="GBK"?>
<xs:schema targetNamespace="http://mapping4java.googlecode.com/schema/mapping" xmlns="http://mapping4java.googlecode.com/schema/mapping" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

	<xs:element name="bean-mappings">
        <xs:annotation>
        	<xs:documentation>bean mappings config</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:annotation>
            	<xs:documentation>src/target bean mapping </xs:documentation>
            </xs:annotation>
            <xs:choice maxOccurs="unbounded">
            	<xs:element ref="global-configurations" maxOccurs="1" />
            	<xs:element ref="convetors-configurations" maxOccurs="1" />
            	<xs:element ref="class-alias-configurations" maxOccurs="1" />
            	<xs:element ref="function-class-configurations" maxOccurs="1" />
            	<xs:element ref="bean-mapping" maxOccurs="unbounded" />
            </xs:choice>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="global-configurations">
		<xs:annotation>
			<xs:documentation>bean mappings system configurations
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="debug" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>debug flag</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="mappingNullValue" type="xs:boolean" default="true">
				<xs:annotation>
					<xs:documentation>should mapping null value</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="mappingEmptyStrings" type="xs:boolean" default="true">
				<xs:annotation>
					<xs:documentation>should mapping emptyStrings</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="trimStrings" type="xs:boolean" default="false">
				<xs:annotation>
					<xs:documentation>should mapping after trims</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
		
	<xs:element name="convetors-configurations">
        <xs:annotation>
        	<xs:documentation>convertor configs</xs:documentation>
        </xs:annotation>
        <xs:complexType>
       		 <xs:sequence>
    			<xs:element ref="convertor" maxOccurs="unbounded" />
    		</xs:sequence>
    	</xs:complexType>
    </xs:element>
    
    <xs:element name="convertor">
        <xs:annotation>
        	<xs:documentation>convertor</xs:documentation>
        </xs:annotation>
        <xs:complexType>
        	<xs:attribute name="alias" type="xs:string" />
        	<xs:attribute name="srcClass" type="xs:string" />
        	<xs:attribute name="targetClass" type="xs:string" />
        	<xs:attribute name="class" type="xs:string" use="required" />
    	</xs:complexType>
    </xs:element>
    
    <xs:element name="class-alias-configurations">
        <xs:annotation>
        	<xs:documentation>class alias configs</xs:documentation>
        </xs:annotation>
        <xs:complexType>
       		 <xs:choice>
    			<xs:element ref="classAlias" maxOccurs="unbounded" />
    		</xs:choice>
    	</xs:complexType>
    </xs:element>
    
    <xs:element name="classAlias">
        <xs:annotation>
        	<xs:documentation>class Alias</xs:documentation>
        </xs:annotation>
        <xs:complexType>
        	<xs:attribute name="alias" type="xs:string" use="required" />
        	<xs:attribute name="class" type="xs:string" use="required" />
    	</xs:complexType>
    </xs:element>
    
    <xs:element name="function-class-configurations">
        <xs:annotation>
        	<xs:documentation>function class configs</xs:documentation>
        </xs:annotation>
        <xs:complexType>
       		 <xs:choice>
    			<xs:element ref="functionClass" maxOccurs="unbounded" />
    		</xs:choice>
    	</xs:complexType>
    </xs:element>
    
    <xs:element name="functionClass">
        <xs:annotation>
        	<xs:documentation>function class</xs:documentation>
        </xs:annotation>
        <xs:complexType>
        	<xs:attribute name="name" type="xs:string" use="required" />
        	<xs:attribute name="class" type="xs:string" use="required" />
    	</xs:complexType>
    </xs:element>
    
    <xs:element name="bean-mapping">
        <xs:complexType>
        	<xs:sequence>
        		<xs:element ref="field-mapping" maxOccurs="unbounded" />
        	</xs:sequence>
        	<xs:attribute name="srcClass" type="xs:string" use="required" />
        	<xs:attribute name="srcKey" type="xs:string" default="src">
        		<xs:annotation>
        			<xs:documentation>script context for key, you can use define script with "srcKey.field"</xs:documentation>
        		</xs:annotation></xs:attribute>
        	<xs:attribute name="targetClass" type="xs:string" use="required" />
        	<xs:attribute name="targetKey" type="xs:string" default="target">
        		<xs:annotation>
        			<xs:documentation>script context for key, you can use define script with &quot;srcKey.field&quot;</xs:documentation></xs:annotation></xs:attribute>
        	<xs:attribute name="reversable" type="xs:boolean" use="optional" default="false" />
        	<xs:attribute name="batch" type="xs:boolean" use="optional" default="false" />
        	<xs:attribute name="debug" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>debug flag</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="mappingNullValue" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>should mapping null value</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="mappingEmptyStrings" type="xs:boolean" >
				<xs:annotation>
					<xs:documentation>should mapping emptyStrings</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="trimStrings" type="xs:boolean" >
				<xs:annotation>
					<xs:documentation>should mapping after trims</xs:documentation>
				</xs:annotation>
			</xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="field-mapping">
        <xs:complexType>
        	<xs:attribute name="srcName" type="xs:string" use="optional" >
        		<xs:annotation>
        			<xs:documentation>src field name</xs:documentation>
        		</xs:annotation>
        	</xs:attribute>
        	<xs:attribute name="targetName" type="xs:string" use="optional" >
        		<xs:annotation>
        			<xs:documentation>target field name</xs:documentation>
        		</xs:annotation>
        	</xs:attribute>
        	<xs:attribute name="srcClass" type="xs:string" use="optional" >
        		<xs:annotation>
        			<xs:documentation>src field class</xs:documentation>
        		</xs:annotation>
        	</xs:attribute>
        	<xs:attribute name="targetClass" type="xs:string" use="optional" >
        		<xs:annotation>
        			<xs:documentation>target field class</xs:documentation>
        		</xs:annotation>
        	</xs:attribute>
        	<xs:attribute name="srcLocatorClass" type="xs:string" use="optional" >
        		<xs:annotation>
        			<xs:documentation>src locator class</xs:documentation>
        		</xs:annotation>
        	</xs:attribute>
        	<xs:attribute name="targetLocatorClass" type="xs:string" use="optional" >
        		<xs:annotation>
        			<xs:documentation>target locator class</xs:documentation>
        		</xs:annotation>
        	</xs:attribute>
        	<xs:attribute name="srcComponentClass" type="xs:string" use="optional" >
        		<xs:annotation>
        			<xs:documentation>src component class</xs:documentation>
        		</xs:annotation>
        	</xs:attribute>
        	<xs:attribute name="targetComponentClass" type="xs:string" use="optional" >
        		<xs:annotation>
        			<xs:documentation>target component class</xs:documentation>
        		</xs:annotation>
        	</xs:attribute>
        	<xs:attribute name="defaultValue" type="xs:string" use="optional" >
        		<xs:annotation>
        			<xs:documentation>if target value is null , defaultValue is used</xs:documentation>
        		</xs:annotation>
        	</xs:attribute>
        	<xs:attribute name="convetor" type="xs:string" use="optional" >
        		<xs:annotation>
        			<xs:documentation>custom convetor alias</xs:documentation>
        		</xs:annotation>
        	</xs:attribute>
        	<xs:attribute name="script" type="xs:string" use="optional" >
        		<xs:annotation>
        			<xs:documentation>format script</xs:documentation>
        		</xs:annotation>
        	</xs:attribute>
        	<xs:attribute name="mapping" type="xs:boolean" use="optional" default="false">
        		<xs:annotation>
        			<xs:documentation>nested mapping</xs:documentation>
        		</xs:annotation>
        	</xs:attribute>
			<xs:attribute name="mappingNullValue" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>should mapping null value</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="mappingEmptyStrings" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>should mapping emptyStrings</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="trimStrings" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>should mapping after trims</xs:documentation>
				</xs:annotation>
			</xs:attribute>
        </xs:complexType>
    </xs:element>
</xs:schema>